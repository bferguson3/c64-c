;
; File generated by cc65 v 2.19 - Git 5f8d16304
;
	.fopt		compiler,"cc65 v 2.19 - Git 5f8d16304"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_print
	.export		_a
	.export		_WaitVBLANK
	.export		_main

.segment	"RODATA"

_a:
	.byte	$C8,$45,$4C,$4C,$4F,$20,$D7,$4F,$52,$4C,$44,$21,$00

.segment	"BSS"

_g_charsetMode:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ print (const unsigned char *a)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp5
	jmp     L0004
L0002:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
L0004:	ldy     #$06
	jsr     ldaxysp
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	cmp     #$00
	jsr     boolne
	jne     L0002
	ldx     #$04
	lda     #$00
	ldy     #$03
	jsr     staxysp
	ldx     #$00
	lda     _g_charsetMode
	cmp     #$00
	jsr     booleq
	jeq     L0005
	jmp     L0009
L0005:	ldx     #$00
	lda     _g_charsetMode
	cmp     #$01
	jsr     booleq
	jeq     L0009
	ldx     #$00
	lda     #$00
	ldy     #$02
	sta     (sp),y
L0008:	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     tosultax
	jne     L000B
	jmp     L0009
L000B:	ldy     #$06
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	ldy     #$01
	sta     (sp),y
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     #$C0
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L000D
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     #$E0
	jsr     boolult
	jne     L000E
L000D:	ldx     #$00
	lda     #$00
	jeq     L000F
L000E:	ldx     #$00
	lda     #$01
L000F:	jeq     L000C
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	sec
	sbc     #$80
	sta     (sp),y
	jmp     L0011
L000C:	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     #$40
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0012
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     #$60
	jsr     boolult
	jne     L0013
L0012:	ldx     #$00
	lda     #$00
	jeq     L0014
L0013:	ldx     #$00
	lda     #$01
L0014:	jeq     L0011
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	sec
	sbc     #$40
	sta     (sp),y
L0011:	ldy     #$04
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	ldy     #$00
	jsr     staspidx
	ldy     #$03
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$02
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jmp     L0008
L0009:	jsr     incsp7
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ WaitVBLANK (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WaitVBLANK: near

.segment	"CODE"

L0002:	lda     $d011
	and     #$80
	beq     L0002
L0003:	lda     $d011
	and     #$80
	bne     L0003
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #23
	sta     $d018
	ldx     #$00
	lda     #$01
	sta     _g_charsetMode
	lda     #<(_a)
	ldx     #>(_a)
	jsr     _print
	jmp     L0004
L0002:	jsr     _WaitVBLANK
	inc     $d020
L0004:	jmp     L0002
	rts

.endproc

